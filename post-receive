#!/bin/bash
set -euxo pipefail

# To use this script as a hook for continuous deployment, create a
# file `hooks/post-receive` in the remote which calls it with sudo.

WORKDIR=~/piplayer
ENV=.env.production
build() {
  if ! docker build -t piplayer."$1" -f ./docker/"$1"/Dockerfile .
  then
    echo "Failed to build $1" 1>&2
    exit 1
  fi
}
image_of() {
  docker inspect $(docker ps | grep "$1" | awk '{print $1}') | grep Image | grep sha256
}

# From https://gist.github.com/deanrather/3697539
echo "Determining branch"
if ! [ -t 0 ]
then
  read -a ref
fi
BRANCH=$(sed 's,refs/heads/,,' <<< "${ref[2]}")

GIT_WORK_TREE="$WORKDIR" git checkout -f "$BRANCH"

if [[ "$BRANCH" == "deploy/production" ]] && [[ "$(hostname)" == "bier" ]]
then
  pushd "$WORKDIR"
  
  bash ./build_and_run.sh "$ENV"
fi
